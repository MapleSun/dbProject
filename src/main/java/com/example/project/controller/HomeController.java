package com.example.project.controller;

import com.example.project.dataobject.Customer;
import com.example.project.dataobject.Passenger;
import com.example.project.repository.CustomerRepository;
import com.example.project.dataobject.User;
import com.example.project.service.CustomerService;
import com.example.project.service.PassengerService;
import com.example.project.service.SessionService;
import com.example.project.util.Constants;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletRequest;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

@Controller    // This means that this class is a Controller
public class HomeController {
	@Autowired // This means to get the bean called userRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private CustomerRepository customerRepository;

	@Autowired
	private CustomerService customerService;

	@Autowired
	private PassengerService passengerService;

	@Autowired
	private SessionService sessionService;
	@GetMapping(path="/")
	public String hello(Model model) {
		model.addAttribute("message", "world");
		return "home";
	}

	@GetMapping(path="/flight")
	public String flightList(Model model) {

		return "flightList";
	}

	@GetMapping(path="/login")
	public String loginPage(Model model) {
		return "login";
	}

	@PostMapping(path="/login")
	public String login(Model model, HttpServletRequest request, @RequestParam String password, @RequestParam String email) {

		Customer result = customerRepository.findBycEmail(email);
		if (password.equals(result.getCPassword())) {
			model.addAttribute("message", Constants.LOGINSUCCESS);
			sessionService.setCustomer(request, result);
		} else {
			model.addAttribute("message", Constants.LOGINFAILED);
		}
		return "home";
	}


	@GetMapping(path="/signup")
	public String signupPage(Model model) {
		model.addAttribute("user", new User());
		return "signup";
	}


	@PostMapping(path="/signup")
	public String signup(Model model
			 ,@RequestParam String fname, @RequestParam String lname
			,@RequestParam String nationality, @RequestParam String gender
			,@RequestParam Integer passportNumber, @RequestParam String passExpDate
			,@RequestParam String DOB, @RequestParam String cStreet
			,@RequestParam String cCity, @RequestParam String cCountry
			, @RequestParam String cERFname
			,@RequestParam String cERLname, @RequestParam String cERContactNum
			,@RequestParam String cEContCode, @RequestParam String cContactNum
			,@RequestParam String cPassword, @RequestParam String cEmail) throws ParseException {

		SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd");//注意月份是MM
		Passenger passenger = new Passenger();
		passenger.setFname(fname);
		passenger.setLname(lname);
		passenger.setNationality(nationality);
		passenger.setGender(gender);
		passenger.setPassportNumber(passportNumber);
		passenger.setPassExpDate(simpleDateFormat.parse(passExpDate));
		passenger.setDOB(simpleDateFormat.parse(DOB));

		Customer customer = new Customer();
		customer.setCEmail(cEmail);
		customer.setCStreet(cStreet);
		customer.setCCity(cCity);
		customer.setCCountry(cCountry);
		customer.setCPassNum(passportNumber);
		customer.setCERFname(cERFname);
		customer.setCERLname(cERLname);
		customer.setCEContactNum(cERContactNum);
		customer.setCContactNum(cContactNum);
		customer.setCEContCode(cEContCode);
		customer.setCPassword(cPassword);

		passengerService.addPassenger(passenger);
		customerService.addCustomer(customer);


		model.addAttribute("message", "Sign Up success");
		return "home";
	}


}
